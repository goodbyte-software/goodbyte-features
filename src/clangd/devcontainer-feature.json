{
    "id": "ClangD",
    "version": "1.0.0",
    "name": "ClangD",
    "description": "ClangD",
    "installsAfter": [
        "./features/gb_commons"
    ],
    "customizations": {
        "vscode": {
            "extensions": [
                "llvm-vs-code-extensions.vscode-clangd"
            ],
            "settings": {
                /// CLANGD settings:
                "C_Cpp.intelliSenseEngine": "disabled",
                // "clangd.path": "/usr/bin/clangd", //if clangd is not in PATH
                "clangd.arguments": [
                    "--pretty",
                    "--enable-config",
                    "--background-index",
                    "--compile-commands-dir=${workspaceFolder}/golioth_iot/build",
                    "--header-insertion=never",
                    // ToDo: pass as parameter. 
                    // example: ZEPHYR_SDK_INSTALL_DIR=/root/ncs/toolchains/2be090971e/opt/zephyr-sdk
                    //"--query-driver=${env:ZEPHYR_SDK_INSTALL_DIR}/arm-zephyr-eabi/bin/arm-zephyr-eabi-*",
                    "--query-driver=/opt/toolchains/zephyr-sdk-0.16.3/arm-zephyr-eabi/bin/arm-zephyr-eabi-*",
                    // Use verbose mode in case of clang problems: check in window OUTPUT with clangd in dropdown menu !open some c/cpp file first!
                    "--log=verbose"
                    // "--log=error"
                ],
                "clangd.checkUpdates": false
                /// CLANGD settings^
            }
        }
    }
}
